unit uUtil;

interface

uses
  System.Classes,System.SysUtils;

type
  Util = class
    private
    public
     StringORDValue:TStringList;
     StringREVValue:TStringList;
     StringFULLORDValue:TStringList;
     StringFULLREVValue:TStringList;
     procedure populaStringListORD;
     procedure populaStringListREV;
     procedure populaStringListFULLORD;
     procedure populaStringListFULLREV;
     function  ValorOrd(pword:String):integer;
     function  ValorRev(pword:String):integer;
     function  ValorFULLOrd(pword:String):integer;
     function  ValorFULLRev(pword:String):integer;
    protected

     constructor Create; reintroduce;
  end;

implementation

{ Util }

constructor Util.Create;
begin
  StringORDValue:= TStringList.Create;
  StringREVValue:= TStringList.Create;
  StringFULLORDValue := TStringList.Create;
  StringFULLREVValue := TStringList.Create;
  populaStringListORD;
  populaStringListREV;
  populaStringListFULLORD;
  populaStringListFULLREV;
end;


procedure Util.populaStringListFULLORD;
begin
  StringFULLORDValue.AddObject('a',TObject(1));
  StringFULLORDValue.AddObject('b',TObject(2));
  StringFULLORDValue.AddObject('c',TObject(3));
  StringFULLORDValue.AddObject('d',TObject(4));
  StringFULLORDValue.AddObject('e',TObject(5));
  StringFULLORDValue.AddObject('f',TObject(6));
  StringFULLORDValue.AddObject('g',TObject(7));
  StringFULLORDValue.AddObject('h',TObject(8));
  StringFULLORDValue.AddObject('i',TObject(9));
  StringFULLORDValue.AddObject('j',TObject(1));
  StringFULLORDValue.AddObject('k',TObject(2));
  StringFULLORDValue.AddObject('l',TObject(3));
  StringFULLORDValue.AddObject('m',TObject(4));
  StringFULLORDValue.AddObject('n',TObject(5));
  StringFULLORDValue.AddObject('o',TObject(6));
  StringFULLORDValue.AddObject('p',TObject(7));
  StringFULLORDValue.AddObject('q',TObject(8));
  StringFULLORDValue.AddObject('r',TObject(9));
  StringFULLORDValue.AddObject('s',TObject(1));
  StringFULLORDValue.AddObject('t',TObject(2));
  StringFULLORDValue.AddObject('u',TObject(3));
  StringFULLORDValue.AddObject('v',TObject(4));
  StringFULLORDValue.AddObject('w',TObject(5));
  StringFULLORDValue.AddObject('x',TObject(6));
  StringFULLORDValue.AddObject('y',TObject(7));
  StringFULLORDValue.AddObject('z',TObject(8));
end;

procedure Util.populaStringListFULLREV;
begin
  StringFULLREVValue.AddObject('a',TObject(8));
  StringFULLREVValue.AddObject('b',TObject(7));
  StringFULLREVValue.AddObject('c',TObject(6));
  StringFULLREVValue.AddObject('d',TObject(5));
  StringFULLREVValue.AddObject('e',TObject(4));
  StringFULLREVValue.AddObject('f',TObject(3));
  StringFULLREVValue.AddObject('g',TObject(2));
  StringFULLREVValue.AddObject('h',TObject(1));
  StringFULLREVValue.AddObject('i',TObject(9));
  StringFULLREVValue.AddObject('j',TObject(8));
  StringFULLREVValue.AddObject('k',TObject(7));
  StringFULLREVValue.AddObject('l',TObject(6));
  StringFULLREVValue.AddObject('m',TObject(5));
  StringFULLREVValue.AddObject('n',TObject(4));
  StringFULLREVValue.AddObject('o',TObject(3));
  StringFULLREVValue.AddObject('p',TObject(2));
  StringFULLREVValue.AddObject('q',TObject(1));
  StringFULLREVValue.AddObject('r',TObject(9));
  StringFULLREVValue.AddObject('s',TObject(8));
  StringFULLREVValue.AddObject('t',TObject(7));
  StringFULLREVValue.AddObject('u',TObject(6));
  StringFULLREVValue.AddObject('v',TObject(5));
  StringFULLREVValue.AddObject('w',TObject(4));
  StringFULLREVValue.AddObject('x',TObject(3));
  StringFULLREVValue.AddObject('y',TObject(2));
  StringFULLREVValue.AddObject('z',TObject(1));
end;

procedure Util.populaStringListORD;
begin
  StringORDValue.AddObject('a',TObject(1));
  StringORDValue.AddObject('b',TObject(2));
  StringORDValue.AddObject('c',TObject(3));
  StringORDValue.AddObject('d',TObject(4));
  StringORDValue.AddObject('e',TObject(5));
  StringORDValue.AddObject('f',TObject(6));
  StringORDValue.AddObject('g',TObject(7));
  StringORDValue.AddObject('h',TObject(8));
  StringORDValue.AddObject('i',TObject(9));
  StringORDValue.AddObject('j',TObject(10));
  StringORDValue.AddObject('k',TObject(11));
  StringORDValue.AddObject('l',TObject(12));
  StringORDValue.AddObject('m',TObject(13));
  StringORDValue.AddObject('n',TObject(14));
  StringORDValue.AddObject('o',TObject(15));
  StringORDValue.AddObject('p',TObject(16));
  StringORDValue.AddObject('q',TObject(17));
  StringORDValue.AddObject('r',TObject(18));
  StringORDValue.AddObject('s',TObject(19));
  StringORDValue.AddObject('t',TObject(20));
  StringORDValue.AddObject('u',TObject(21));
  StringORDValue.AddObject('v',TObject(22));
  StringORDValue.AddObject('w',TObject(23));
  StringORDValue.AddObject('x',TObject(24));
  StringORDValue.AddObject('y',TObject(25));
  StringORDValue.AddObject('z',TObject(26));
end;

procedure Util.populaStringListREV;
begin
  StringREVValue.AddObject('a',TObject(26));
  StringREVValue.AddObject('b',TObject(25));
  StringREVValue.AddObject('c',TObject(24));
  StringREVValue.AddObject('d',TObject(23));
  StringREVValue.AddObject('e',TObject(22));
  StringREVValue.AddObject('f',TObject(21));
  StringREVValue.AddObject('g',TObject(20));
  StringREVValue.AddObject('h',TObject(19));
  StringREVValue.AddObject('i',TObject(18));
  StringREVValue.AddObject('j',TObject(17));
  StringREVValue.AddObject('k',TObject(16));
  StringREVValue.AddObject('l',TObject(15));
  StringREVValue.AddObject('m',TObject(14));
  StringREVValue.AddObject('n',TObject(13));
  StringREVValue.AddObject('o',TObject(12));
  StringREVValue.AddObject('p',TObject(11));
  StringREVValue.AddObject('q',TObject(10));
  StringREVValue.AddObject('r',TObject(9));
  StringREVValue.AddObject('s',TObject(8));
  StringREVValue.AddObject('t',TObject(7));
  StringREVValue.AddObject('u',TObject(6));
  StringREVValue.AddObject('v',TObject(5));
  StringREVValue.AddObject('w',TObject(4));
  StringREVValue.AddObject('x',TObject(3));
  StringREVValue.AddObject('y',TObject(2));
  StringREVValue.AddObject('z',TObject(1));
end;

function Util.ValorFULLOrd(pword: String): integer;
var
  wValorFULLord,
  i,j:integer;
begin

  wValorFULLord:=0;
  for i := 0 to (pword.Length) do
  begin
          for j := 0 to StringFULLORDValue.Count -1 do
              begin
                    if pword[i] = StringFULLORDValue[j] then
                        begin
                          wValorFULLord := wValorFULLord + integer(StringFULLORDValue.Objects[j]);
                        end;
              end;

  end;
  Result:=wValorFULLord;
//  ShowMessage('valor FULLORD: '+IntToStr(wValorFULLord));

end;

function Util.ValorFULLRev(pword: String): integer;
var
  wValorFULLrev,
  i,j:integer;
begin

  wValorFULLrev:=0;
  for i := 0 to (pword.Length) do
  begin
          for j := 0 to StringFULLREVValue.Count -1 do
              begin
                    if pword[i] = StringFULLREVValue[j] then
                        begin
                          wValorFULLrev := wValorFULLrev + integer(StringFULLREVValue.Objects[j]);
                        end;
              end;

  end;
  Result:=wValorFULLrev;
//  ShowMessage('valor FULLREV: '+IntToStr(wValorFULLrev));

end;

function Util.ValorOrd(pword: String): integer;
var
  wValorOrdinal,
  i,j:integer;
begin

  wValorOrdinal:=0;
  for i := 0 to (pword.Length) do
  begin
          for j := 0 to StringORDValue.Count -1 do
              begin
                    if pword[i] = StringORDValue[j] then
                        begin
                          wValorOrdinal := wValorOrdinal + integer(StringORDValue.Objects[j]);
                        end;
              end;

  end;
  Result:=wValorOrdinal;
//  ShowMessage('valor ordinal: '+IntToStr(wValorOrdinal));

end;

function Util.ValorRev(pword: String): integer;
var
  wValorReverso,
  i,j:integer;
begin

  wValorReverso:=0;
  for i := 0 to (pword.Length) do
  begin
          for j := 0 to StringORDValue.Count -1 do
              begin
                    if pword[i] = StringREVValue[j] then
                        begin
                          wValorReverso := wValorReverso + integer(StringREVValue.Objects[j]);
                        end;
              end;

  end;
  Result:=wValorReverso;
//  ShowMessage('valor REVERSO: '+IntToStr(wValorReverso));

end;



end.
